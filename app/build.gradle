plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}
apply plugin: 'kotlin-kapt' // Needed for annotation like @bindable in the MainViewModel.kt. class BR will fail without.

def theAppName = "Kotlin Databinding"

// Load keystore
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        // Run gradlew bash script: (for GitHub action)
        // openssl base64 < app/kotlin.jks | tr -d '\n' | tee your_signing_keystore_base64_encoded.txt

        // gradlew app:assembleRelease    lands in   app\build\outputs\apk\app (18-seconds from clean)
        // gradlew app:assembleDebug      lands in   app\build\outputs\apk\app (14-seconds from clean)
        // gradlew app:bundleRelease      lands in   app\build\outputs\bundle\ (15-seconds from clean)
        // gradlew app:bundleDebug        lands in   app\build\outputs\bundle\ (13-seconds from clean)
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }
    compileSdk 32

    defaultConfig {
        applicationId "com.tappyplay.mybasicbinding_2"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    // (for GitHub action)
    flavorDimensions "version"
    productFlavors {
        app {
            applicationId "com.tappyplay.mybasicbinding_2"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [appName: "${theAppName} release"]
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            manifestPlaceholders = [appName: "${theAppName} debug"]
        }
        // (for GitHub action)
        android.applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "app-${variant.productFlavors[0].name}-${variant.buildType.name}-${variant.versionName}.apk"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // https://developer.android.com/jetpack/androidx/releases/databinding
    dataBinding {
        enabled true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    def appcompat_version = "1.4.1"
    def activity_version = "1.4.0"
    def lifecycle_version = "2.4.1"
    def core_version = "1.7.0"
    def arch_version = "2.1.0"

    // https://developer.android.com/jetpack/androidx/releases/appcompat
    implementation "androidx.appcompat:appcompat:$appcompat_version"

    // https://developer.android.com/jetpack/androidx/releases/lifecycle
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
// replaced extentions

    // https://developer.android.com/jetpack/androidx/releases/activity
    implementation "androidx.activity:activity-ktx:$activity_version"// Needed for 'by viewModels()'

    // https://developer.android.com/jetpack/androidx/releases/core
    implementation "androidx.core:core-ktx:$core_version"

    // https://material.io/develop/android/docs/getting-started
    implementation 'com.google.android.material:material:1.5.0'

    // https://developer.android.com/jetpack/androidx/releases/constraintlayout
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'


    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}